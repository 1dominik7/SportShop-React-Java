services:
  postgres:
    container_name: postgres-sql-ecom
    image: postgres:15
    env_file:
      - .env
    environment:
      POSTGRES_USER: dominik
      POSTGRES_PASSWORD: dominik
      POSTGRES_DB: ecommerce_shop
      PGDATA: /var/lib/postgresql/data
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    networks:
      - spring-demo
    restart: unless-stopped
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}"]
      interval: 5s
      timeout: 5s
      retries: 10
      start_period: 10s

  mail-dev:
    container_name: mail-dev-ecom
    image: maildev/maildev
    ports:
      - "1080:1080"
      - "1025:1025"

  backend:
    container_name: ecommerce-backend
    build: .
    env_file:
      - .env
    environment:
      - SPRING_PROFILES_ACTIVE=dev
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=${POSTGRES_DB}
      - DATASOURCE_URL=jdbc:postgresql://postgres-sql-ecom:5432/ecommerce_shop
      - JWT_SECRET_KEY=${JWT_SECRET_KEY}
      - STRIPE_PUBLISHABLE_KEY=${STRIPE_PUBLISHABLE_KEY}
      - STRIPE_SECRET_KEY=${STRIPE_SECRET_KEY}
      - STRIPE_SUCCESS_URL=${STRIPE_SUCCESS_URL}
      - STRIPE_CANCEL_URL=${STRIPE_CANCEL_URL}
    ports:
      - "8088:8088"
    depends_on:
      postgres:
        condition: service_healthy
      mail-dev:
        condition: service_started
    networks:
      - spring-demo
    restart: unless-stopped

networks:
  spring-demo:
    driver: bridge

volumes:
  postgres_data:
    driver: local